var app = angular.module("multiselectDropdown", []); app.directive("multiselectDropdown", function () {
    return {
        restrict: "EA", replace: !0, scope: { options: "=", ngModel: "=", onSelect: "&", onClose: "&", onOpen: "&", displayProp: "@", valueProp: "@", maxItemsDisplay: "@", triggerId: "@", ddDirection: "@", placeholder: "@", maxSelectionsAllowed: "@", enableSelectAll: "@", theme: "@", dropdownClass: "@" }, link: {
            post: function (e, l, n, o) {
                e.dropdownClass = n.dropdownClass, e.btnText = n.placeholder ? n.placeholder : "Select", e.enableSelectAll = n.enableSelectAll ? n.enableSelectAll : "false", e.ngModel = e.ngModel ? e.ngModel : [], e.allSelected = e.ngModel.length == e.options.length ? !0 : !1, n.maxSelectionsAllowed = n.maxSelectionsAllowed ? n.maxSelectionsAllowed : e.options.length; var t = n.theme || "normal", c = e.btnText, i = o.compile, a = document.querySelector("body"), p = n.triggerId, s = n.displayProp, d = n.valueProp, r = n.maxItemsDisplay ? n.maxItemsDisplay : 3, g = function () { var l = []; return angular.forEach(e.options, function (n, o) { e.ngModel.indexOf(n[d]) > -1 && l.push(n[s]) }), l.join(", ") }, u = function () { 0 == e.ngModel.length ? e.btnText = c : e.ngModel.length <= r ? e.btnText = g() : e.btnText = e.ngModel.length + "of " + e.options.length + " values selected" }; e.updateCheckedColumns = function (l, o) { var t = e.ngModel.indexOf(o); 0 > t && e.ngModel.length < n.maxSelectionsAllowed ? e.ngModel.push(o) : 0 > t && e.ngModel.length >= n.maxSelectionsAllowed ? (l.preventDefault(), alert("Only " + n.maxSelectionsAllowed + " selections are allowed")) : e.ngModel.splice(t, 1), e.ngModel.length == e.options.length ? e.allSelected = !0 : e.allSelected = !1, u(), e.onSelect() }, e.selectAll = function () { if (e.ngModel.length == e.options.length) { var l = document.querySelectorAll('input[name="' + p + '"]'); angular.forEach(l, function (e) { e.setAttribute("checked", !1) }), e.ngModel = [] } else e.ngModel = [], angular.forEach(e.options, function (l) { e.ngModel.push(l.value) }), e.allSelected = !0; u() }; var h = function (e) { var l, n; e ? (n = '<input type="checkbox" name="' + p + '" id="all-' + p + '" ng-checked="allSelected" ng-click="selectAll()">', l = '<span class="checkbox-container"><input type="checkbox" name="' + p + '" id="all-' + p + '" ng-checked="allSelected" ng-click="selectAll()"><span class="icon-tick"><i class="material-icons">check</i></span></span>') : (l = '<span class="checkbox-container"><input type="checkbox" name="' + p + '" id="option-' + p + "-{{option['" + d.replace(/ /g, "") + "']}}\" ng-checked=\"ngModel.indexOf(option['" + d + "']) > -1\" ng-click=\"updateCheckedColumns($event, option['" + d + '\'])"><span class="icon-tick"><i class="material-icons">check</i></span></span>', n = '<input type="checkbox" name="' + p + '" id="option-' + p + "-{{option['" + d.replace(/ /g, "") + "']}}\" ng-checked=\"ngModel.indexOf(option['" + d + "']) > -1\" ng-click=\"updateCheckedColumns($event, option['" + d + "'])\">"); var o = "material" == t ? l : n; return o }, m = '<ng-popover trigger="' + p + '" on-open="onOpen()" on-close="onClose()" ng-class="' + e.dropdownClass + '"><ul class="filters-list"><li ng-if="enableSelectAll == \'true\'">' + h(!0) + '<label for="all-' + p + '">All</label></li><li ng-repeat="option in options">' + h() + '<label for="option-' + p + "-{{option['" + d.replace(/ /g, "") + "']}}\">{{option['" + s + "']}}</label></li></ul></ng-popover>"; o.timeout(function () { a.appendChild(i(m)(e)[0]), u() })
            }
        }, controller: ["$scope", "$compile", "$timeout", function (e, l, n) { this.timeout = n, this.compile = l }], template: '<a class="ng-popover-trigger multiselectDropdownBtn col-md-12" id="{{triggerId}}" data-direction="{{ddDirection}}">{{btnText}}</a>'
    }
});